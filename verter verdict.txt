Run tests:


21 School


VERTER is watching your code...Â¯\_(*_*)_/Â¯

-------------------------------------------------------------------------------

Style test

Style test output:
 Style test: OK
1
Style test result: 1
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------

Part: matrix

Build output:
 cc    -c -o s21_matrix.o s21_matrix.c
ar rc s21_matrix.a s21_matrix.o
ranlib s21_matrix.a
gcc -c test_matrix.c
gcc -c main.c
gcc -o unit_test test_matrix.o main.o ../../src/s21_matrix.a -lm

Project build: OK
1
Build result: 1
-------------------------------------------------------------------------------

Test number: 0, name: eq_matrix

Test output:
Functional test output: True
Memory test output:
==114== Memcheck, a memory error detector
==114== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==114== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==114== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test eq_matrix
==114== 
==114== 
==114== HEAP SUMMARY:
==114==     in use at exit: 0 bytes in 0 blocks
==114==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==114== 
==114== All heap blocks were freed -- no leaks are possible
==114== 
==114== For lists of detected and suppressed errors, rerun with: -s
==114== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_eq_matrix: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 1, name: sum_matrix

Test output:
Functional test output: False
Memory test output:
==120== Memcheck, a memory error detector
==120== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==120== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==120== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sum_matrix
==120== 
==120== Conditional jump or move depends on uninitialised value(s)
==120==    at 0x1104BF: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10A31F: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10FF91: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120== 
==120== Use of uninitialised value of size 8
==120==    at 0x1105CE: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10A31F: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10FF91: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120== 
==120== Invalid read of size 8
==120==    at 0x1105CE: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10A31F: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10FF91: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==  Address 0x2cf4f1804007760 is not stack'd, malloc'd or (recently) free'd
==120== 
==120== 
==120== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==120==  General Protection Fault
==120==    at 0x1105CE: s21_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10A31F: test_sum_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120==    by 0x10FF91: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==120== 
==120== HEAP SUMMARY:
==120==     in use at exit: 0 bytes in 0 blocks
==120==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==120== 
==120== All heap blocks were freed -- no leaks are possible
==120== 
==120== Use --track-origins=yes to see where uninitialised values come from
==120== For lists of detected and suppressed errors, rerun with: -s
==120== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sum_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 2, name: sub_matrix

Test output:
Functional test output: False
Memory test output:
==126== Memcheck, a memory error detector
==126== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==126== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==126== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test sub_matrix
==126== 
==126== Conditional jump or move depends on uninitialised value(s)
==126==    at 0x110696: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10B230: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10FFC4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126== 
==126== Use of uninitialised value of size 8
==126==    at 0x1107A5: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10B230: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10FFC4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126== 
==126== Invalid read of size 8
==126==    at 0x1107A5: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10B230: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10FFC4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==  Address 0x2cf4f1804007760 is not stack'd, malloc'd or (recently) free'd
==126== 
==126== 
==126== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==126==  General Protection Fault
==126==    at 0x1107A5: s21_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10B230: test_sub_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126==    by 0x10FFC4: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==126== 
==126== HEAP SUMMARY:
==126==     in use at exit: 0 bytes in 0 blocks
==126==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==126== 
==126== All heap blocks were freed -- no leaks are possible
==126== 
==126== Use --track-origins=yes to see where uninitialised values come from
==126== For lists of detected and suppressed errors, rerun with: -s
==126== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_sub_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 3, name: mult_number

Test output:
Functional test output: True
Memory test output:
==132== Memcheck, a memory error detector
==132== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==132== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==132== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_number
==132== 
==132== Conditional jump or move depends on uninitialised value(s)
==132==    at 0x11083D: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10BFAE: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10FFF7: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132== 
==132== Conditional jump or move depends on uninitialised value(s)
==132==    at 0x11083D: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10C310: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10FFF7: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132== 
==132== Conditional jump or move depends on uninitialised value(s)
==132==    at 0x11083D: s21_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10C65C: test_mult_number (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132==    by 0x10FFF7: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==132== 
==132== 
==132== HEAP SUMMARY:
==132==     in use at exit: 0 bytes in 0 blocks
==132==   total heap usage: 11 allocs, 11 frees, 232 bytes allocated
==132== 
==132== All heap blocks were freed -- no leaks are possible
==132== 
==132== Use --track-origins=yes to see where uninitialised values come from
==132== For lists of detected and suppressed errors, rerun with: -s
==132== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_number: OK

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 4, name: mult_matrix

Test output:
Functional test output: False
Memory test output:
==138== Memcheck, a memory error detector
==138== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==138== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==138== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test mult_matrix
==138== 
==138== Conditional jump or move depends on uninitialised value(s)
==138==    at 0x1109E2: s21_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x10CBE7: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x11002A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138== 
==138== Use of uninitialised value of size 8
==138==    at 0x110B1C: s21_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x10CBE7: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x11002A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138== 
==138== 
==138== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==138==  Bad permissions for mapped region at address 0x4000000
==138==    at 0x110B30: s21_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x10CBE7: test_mult_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138==    by 0x11002A: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==138== 
==138== HEAP SUMMARY:
==138==     in use at exit: 0 bytes in 0 blocks
==138==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==138== 
==138== All heap blocks were freed -- no leaks are possible
==138== 
==138== Use --track-origins=yes to see where uninitialised values come from
==138== For lists of detected and suppressed errors, rerun with: -s
==138== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)

Test result for the function s21_mult_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 5, name: transpose

Test output:
Functional test output: True
Memory test output:
==144== Memcheck, a memory error detector
==144== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==144== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==144== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test transpose
==144== 
==144== Conditional jump or move depends on uninitialised value(s)
==144==    at 0x110BAF: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x10D906: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x11005D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144== 
==144== Conditional jump or move depends on uninitialised value(s)
==144==    at 0x110BAF: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x10DC5C: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x11005D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144== 
==144== Conditional jump or move depends on uninitialised value(s)
==144==    at 0x110BAF: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x10DFB4: test_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144==    by 0x11005D: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==144== 
==144== 
==144== HEAP SUMMARY:
==144==     in use at exit: 0 bytes in 0 blocks
==144==   total heap usage: 11 allocs, 11 frees, 232 bytes allocated
==144== 
==144== All heap blocks were freed -- no leaks are possible
==144== 
==144== Use --track-origins=yes to see where uninitialised values come from
==144== For lists of detected and suppressed errors, rerun with: -s
==144== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

Test result for the function s21_transpose: OK

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 6, name: calc_complements

Test output:
Functional test output: False
Memory test output:
==150== Memcheck, a memory error detector
==150== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==150== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==150== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test calc_complements
==150== 
==150== Conditional jump or move depends on uninitialised value(s)
==150==    at 0x110FC9: s21_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x10F558: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x110090: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150== 
==150== Conditional jump or move depends on uninitialised value(s)
==150==    at 0x110FC9: s21_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x10F8A8: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x110090: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150== 
==150== Use of uninitialised value of size 8
==150==    at 0x11111A: s21_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x10F8A8: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x110090: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150== 
==150== Invalid write of size 8
==150==    at 0x111133: s21_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x10F8A8: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x110090: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==150== 
==150== 
==150== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==150==  Access not within mapped region at address 0x1
==150==    at 0x111133: s21_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x10F8A8: test_calc_complements (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==    by 0x110090: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==150==  If you believe this happened as a result of a stack
==150==  overflow in your program's main thread (unlikely but
==150==  possible), you can try to increase the size of the
==150==  main thread stack using the --main-stacksize= flag.
==150==  The main thread stack size used in this run was 8388608.
==150== 
==150== HEAP SUMMARY:
==150==     in use at exit: 16 bytes in 2 blocks
==150==   total heap usage: 9 allocs, 7 frees, 160 bytes allocated
==150== 
==150== LEAK SUMMARY:
==150==    definitely lost: 0 bytes in 0 blocks
==150==    indirectly lost: 0 bytes in 0 blocks
==150==      possibly lost: 0 bytes in 0 blocks
==150==    still reachable: 16 bytes in 2 blocks
==150==         suppressed: 0 bytes in 0 blocks
==150== Reachable blocks (those to which a pointer was found) are not shown.
==150== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==150== 
==150== Use --track-origins=yes to see where uninitialised values come from
==150== For lists of detected and suppressed errors, rerun with: -s
==150== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)

Test result for the function s21_calc_complements: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------

Test number: 7, name: determinant

Test output:
Functional test output: True
Memory test output:
==156== Memcheck, a memory error detector
==156== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==156== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==156== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test determinant
==156== 
==156== 
==156== HEAP SUMMARY:
==156==     in use at exit: 0 bytes in 0 blocks
==156==   total heap usage: 19 allocs, 19 frees, 336 bytes allocated
==156== 
==156== All heap blocks were freed -- no leaks are possible
==156== 
==156== For lists of detected and suppressed errors, rerun with: -s
==156== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Test result for the function s21_determinant: OK

Memory test: OK 
1
Test result: 1
-------------------------------------------------------------------------------

Test number: 8, name: inverse_matrix

Test output:
Functional test output: False
Memory test output:
==162== Memcheck, a memory error detector
==162== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==162== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==162== Command: /builds/pipelines/test/to/tests/unit-tests/unit_test inverse_matrix
==162== 
==162== Conditional jump or move depends on uninitialised value(s)
==162==    at 0x1111FF: s21_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x10E9C7: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x1100F0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162== 
==162== Conditional jump or move depends on uninitialised value(s)
==162==    at 0x1111FF: s21_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x10ED17: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x1100F0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162== 
==162== Conditional jump or move depends on uninitialised value(s)
==162==    at 0x110BAF: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x111339: s21_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x10ED17: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x1100F0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162== 
==162== Conditional jump or move depends on uninitialised value(s)
==162==    at 0x110C48: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x111339: s21_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x10ED17: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x1100F0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162== 
==162== Conditional jump or move depends on uninitialised value(s)
==162==    at 0x110C38: s21_transpose (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x111339: s21_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x10ED17: test_inverse_matrix (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162==    by 0x1100F0: main (in /builds/pipelines/test/to/tests/unit-tests/unit_test)
==162== 
==162== 
==162== More than 10000000 total errors detected.  I'm not reporting any more.
==162== Final error counts will be inaccurate.  Go fix your program!
==162== Rerun with --error-limit=no to disable this cutoff.  Note
==162== that errors may occur in your program without prior warning from
==162== Valgrind, because errors are no longer being displayed.
==162== 
==162== 
==162== HEAP SUMMARY:
==162==     in use at exit: 0 bytes in 0 blocks
==162==   total heap usage: 97 allocs, 97 frees, 1,824 bytes allocated
==162== 
==162== All heap blocks were freed -- no leaks are possible
==162== 
==162== Use --track-origins=yes to see where uninitialised values come from
==162== For lists of detected and suppressed errors, rerun with: -s
==162== ERROR SUMMARY: 10000000 errors from 5 contexts (suppressed: 0 from 0)

Test result for the function s21_inverse_matrix: FAIL

Memory test: FAIL 
0
Test result: 0
-------------------------------------------------------------------------------